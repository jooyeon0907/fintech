spring:
  jpa:
    generate-ddl: false
    show-sql: true # 디버깅을 위함
    hibernate:
      ddl-auto: validate
        # create-drop 옵션은 서비스가 뜰 때 테이블의 엔티티들을 모두 생성하고, 서비스가 내려가면서 생명주기가 끝났을 때 테이블을 다 drop 함
        # validate 옵션은 코드와 실제 테이블이 일치하는가를 판단해줌 (잘못된 코드가 들어가지 않도록 validate 해줌)
      naming: # 데이터의 대소문자 구분해줌 (대소문자가 구분이 되는 데이터를 위해 설정을 해주는 것이 좋음)
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver # mysql 드라이버 설정
    url: jdbc:mysql://fintech-mysql:3306/fintech?characterEncoding=UTF-8&serverTimezone=Asia/Seoul
    username: fintech
    password: fintech
      # 민감한 정보이므로 실제 서비스에서는 바로 노출을 안하고, 특정 서버에서 따로 관리를 하거나 암호화를 하여 넣어둠
  redis:
    host: fintech-redis
    port: 6379
